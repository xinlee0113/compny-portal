<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>数据管理 - 楚起科技管理面板</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body { background: #f8f9fa; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
        .sidebar { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh; position: fixed; top: 0; left: 0; width: 260px; z-index: 1000; }
        .sidebar .logo { padding: 2rem 1.5rem; text-align: center; border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
        .sidebar .logo h4 { color: white; margin: 0; font-weight: 600; }
        .sidebar .nav-link { color: rgba(255, 255, 255, 0.8); padding: 0.75rem 1.5rem; transition: all 0.3s ease; }
        .sidebar .nav-link:hover, .sidebar .nav-link.active { color: white; background: rgba(255, 255, 255, 0.1); }
        .sidebar .nav-link i { margin-right: 0.75rem; font-size: 1rem; }
        .main-content { margin-left: 260px; padding: 2rem; }
        .header { background: white; padding: 1.5rem 2rem; border-radius: 15px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08); margin-bottom: 2rem; }
        .card { border: none; border-radius: 15px; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08); }
        .btn-primary { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border: none; border-radius: 10px; }
        .btn-success { background: linear-gradient(135deg, #28a745 0%, #20c997 100%); border: none; border-radius: 10px; }
        .btn-danger { background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%); border: none; border-radius: 10px; }
        .btn-warning { background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%); border: none; border-radius: 10px; }
        .status-icon { width: 12px; height: 12px; border-radius: 50%; display: inline-block; margin-right: 8px; }
        .status-success { background: #28a745; }
        .status-warning { background: #ffc107; }
        .status-error { background: #dc3545; }
        .backup-item { border-left: 4px solid #667eea; background: white; }
        .log-container { background: #2c3e50; color: #ecf0f1; border-radius: 10px; max-height: 400px; overflow-y: auto; font-family: 'Courier New', monospace; font-size: 0.875rem; }
    </style>
</head>
<body>
    <!-- 侧边栏 -->
    <nav class="sidebar">
        <div class="logo">
            <h4><i class="fas fa-cogs me-2"></i>管理面板</h4>
        </div>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link" href="/admin">
                    <i class="fas fa-tachometer-alt"></i>仪表盘
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/users">
                    <i class="fas fa-users"></i>用户管理
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/monitor">
                    <i class="fas fa-chart-line"></i>系统监控
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/admin/backup">
                    <i class="fas fa-database"></i>数据管理
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/company">
                    <i class="fas fa-building"></i>公司信息
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/logs">
                    <i class="fas fa-file-alt"></i>日志管理
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/settings">
                    <i class="fas fa-cog"></i>系统设置
                </a>
            </li>
            <li class="nav-item">
                <hr style="border-color: rgba(255,255,255,0.1);">
                <a class="nav-link" href="/">
                    <i class="fas fa-home"></i>返回首页
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/auth/profile">
                    <i class="fas fa-user"></i>个人中心
                </a>
            </li>
        </ul>
    </nav>

    <!-- 主内容区 -->
    <div class="main-content">
        <!-- 头部 -->
        <header class="header">
            <div>
                <h1 class="h3 mb-0"><i class="fas fa-database text-primary me-2"></i>数据管理中心</h1>
                <small class="text-muted">数据备份、恢复与系统监控</small>
            </div>
        </header>

        <div class="row">
            <!-- 快速操作 -->
            <div class="col-xl-4 mb-4">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0"><i class="fas fa-bolt me-2"></i>快速操作</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-3">
                            <button class="btn btn-success" onclick="performBackup()">
                                <i class="fas fa-download me-2"></i>立即备份
                            </button>
                            <button class="btn btn-warning" onclick="showRestoreModal()">
                                <i class="fas fa-upload me-2"></i>数据恢复
                            </button>
                            <button class="btn btn-primary" onclick="checkSystemHealth()">
                                <i class="fas fa-heartbeat me-2"></i>系统检查
                            </button>
                            <button class="btn btn-info" onclick="viewApiStatus()">
                                <i class="fas fa-chart-bar me-2"></i>API状态
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 系统状态 -->
            <div class="col-xl-8 mb-4">
                <div class="card">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0"><i class="fas fa-server me-2"></i>系统状态</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="d-flex align-items-center">
                                    <span class="status-icon status-success"></span>
                                    <strong>数据库状态:</strong>
                                    <span class="ms-2 text-success" id="dbStatus">正常运行</span>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="d-flex align-items-center">
                                    <span class="status-icon status-success"></span>
                                    <strong>Redis缓存:</strong>
                                    <span class="ms-2 text-success" id="redisStatus">正常运行</span>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="d-flex align-items-center">
                                    <span class="status-icon status-warning"></span>
                                    <strong>上次备份:</strong>
                                    <span class="ms-2 text-warning" id="lastBackup">2小时前</span>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="d-flex align-items-center">
                                    <span class="status-icon status-success"></span>
                                    <strong>备份文件:</strong>
                                    <span class="ms-2 text-success" id="backupCount">15个文件</span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- API监控快速链接 -->
                        <div class="mt-3 pt-3 border-top">
                            <h6 class="text-muted mb-2">API监控链接:</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <a href="http://localhost:3001/api/health" target="_blank" class="btn btn-outline-success btn-sm">
                                        <i class="fas fa-heartbeat me-1"></i>健康检查
                                    </a>
                                </div>
                                <div class="col-md-6">
                                    <a href="http://localhost:3001/api/status" target="_blank" class="btn btn-outline-info btn-sm">
                                        <i class="fas fa-info-circle me-1"></i>系统状态
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 备份历史 -->
        <div class="row">
            <div class="col-xl-6 mb-4">
                <div class="card">
                    <div class="card-header bg-secondary text-white">
                        <h5 class="mb-0"><i class="fas fa-history me-2"></i>备份历史</h5>
                    </div>
                    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
                        <div id="backupHistory">
                            <!-- 备份历史将通过JavaScript动态加载 -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- 操作日志 -->
            <div class="col-xl-6 mb-4">
                <div class="card">
                    <div class="card-header bg-dark text-white">
                        <h5 class="mb-0"><i class="fas fa-terminal me-2"></i>操作日志</h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="log-container p-3" id="operationLog">
                            <div>[<span class="text-info">INFO</span>] 系统启动完成</div>
                            <div>[<span class="text-success">SUCCESS</span>] 数据库连接正常</div>
                            <div>[<span class="text-success">SUCCESS</span>] Redis缓存连接正常</div>
                            <div>[<span class="text-warning">WARN</span>] 内存使用率: 67%</div>
                            <div>[<span class="text-info">INFO</span>] 等待操作...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 恢复数据模态框 -->
    <div class="modal fade" id="restoreModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><i class="fas fa-upload me-2"></i>数据恢复</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>警告:</strong> 数据恢复操作将覆盖当前数据，请确认您选择的备份文件是正确的。
                    </div>
                    <div class="mb-3">
                        <label for="backupFile" class="form-label">选择备份文件:</label>
                        <select class="form-select" id="backupFile">
                            <option value="">请选择备份文件...</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="confirmText" class="form-label">确认操作 (请输入 "RESTORE"):</label>
                        <input type="text" class="form-control" id="confirmText" placeholder="输入 RESTORE 确认">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-danger" onclick="performRestore()">确认恢复</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // 备份操作
        async function performBackup() {
            const logContainer = document.getElementById('operationLog');
            
            logContainer.innerHTML += `<div>[<span class="text-info">INFO</span>] 开始数据备份...</div>`;
            logContainer.scrollTop = logContainer.scrollHeight;
            
            try {
                const response = await fetch('/admin/api/backup', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    logContainer.innerHTML += `<div>[<span class="text-success">SUCCESS</span>] 备份完成: ${result.filename}</div>`;
                    loadBackupHistory();
                } else {
                    logContainer.innerHTML += `<div>[<span class="text-danger">ERROR</span>] 备份失败: ${result.error}</div>`;
                }
            } catch (error) {
                logContainer.innerHTML += `<div>[<span class="text-danger">ERROR</span>] 网络错误: ${error.message}</div>`;
            }
            
            logContainer.scrollTop = logContainer.scrollHeight;
        }

        // 显示恢复模态框
        function showRestoreModal() {
            loadBackupFiles();
            new bootstrap.Modal(document.getElementById('restoreModal')).show();
        }

        // 执行恢复
        async function performRestore() {
            const backupFile = document.getElementById('backupFile').value;
            const confirmText = document.getElementById('confirmText').value;
            
            if (!backupFile) {
                alert('请选择备份文件');
                return;
            }
            
            if (confirmText !== 'RESTORE') {
                alert('请输入正确的确认文本: RESTORE');
                return;
            }
            
            const logContainer = document.getElementById('operationLog');
            logContainer.innerHTML += `<div>[<span class="text-warning">WARN</span>] 开始数据恢复: ${backupFile}</div>`;
            
            try {
                const response = await fetch('/admin/api/restore', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ backupFile })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    logContainer.innerHTML += `<div>[<span class="text-success">SUCCESS</span>] 恢复完成</div>`;
                    bootstrap.Modal.getInstance(document.getElementById('restoreModal')).hide();
                } else {
                    logContainer.innerHTML += `<div>[<span class="text-danger">ERROR</span>] 恢复失败: ${result.error}</div>`;
                }
            } catch (error) {
                logContainer.innerHTML += `<div>[<span class="text-danger">ERROR</span>] 网络错误: ${error.message}</div>`;
            }
            
            logContainer.scrollTop = logContainer.scrollHeight;
        }

        // 系统健康检查
        async function checkSystemHealth() {
            const logContainer = document.getElementById('operationLog');
            logContainer.innerHTML += `<div>[<span class="text-info">INFO</span>] 检查系统健康状态...</div>`;
            
            try {
                const response = await fetch('/api/health');
                const result = await response.json();
                
                document.getElementById('dbStatus').textContent = result.database ? '正常运行' : '连接失败';
                document.getElementById('redisStatus').textContent = result.redis ? '正常运行' : '连接失败';
                
                logContainer.innerHTML += `<div>[<span class="text-success">SUCCESS</span>] 健康检查完成</div>`;
            } catch (error) {
                logContainer.innerHTML += `<div>[<span class="text-danger">ERROR</span>] 健康检查失败: ${error.message}</div>`;
            }
            
            logContainer.scrollTop = logContainer.scrollHeight;
        }

        // 查看API状态
        function viewApiStatus() {
            window.open('/api/status', '_blank');
        }

        // 加载备份历史
        async function loadBackupHistory() {
            try {
                const response = await fetch('/admin/api/backup/history');
                const backups = await response.json();
                
                const container = document.getElementById('backupHistory');
                container.innerHTML = '';
                
                backups.forEach(backup => {
                    const backupDiv = document.createElement('div');
                    backupDiv.className = 'backup-item p-3 mb-2 rounded';
                    backupDiv.innerHTML = `
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">${backup.filename}</h6>
                                <small class="text-muted">${backup.date} | ${backup.size}</small>
                            </div>
                            <div>
                                <button class="btn btn-sm btn-outline-primary" onclick="downloadBackup('${backup.filename}')">
                                    <i class="fas fa-download"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-danger" onclick="deleteBackup('${backup.filename}')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    `;
                    container.appendChild(backupDiv);
                });
            } catch (error) {
                console.error('加载备份历史失败:', error);
            }
        }

        // 加载备份文件列表
        async function loadBackupFiles() {
            try {
                const response = await fetch('/admin/api/backup/history');
                const backups = await response.json();
                
                const select = document.getElementById('backupFile');
                select.innerHTML = '<option value="">请选择备份文件...</option>';
                
                backups.forEach(backup => {
                    const option = document.createElement('option');
                    option.value = backup.filename;
                    option.textContent = `${backup.filename} (${backup.date})`;
                    select.appendChild(option);
                });
            } catch (error) {
                console.error('加载备份文件失败:', error);
            }
        }

        // 下载备份文件
        function downloadBackup(filename) {
            window.open(`/admin/api/backup/download/${filename}`, '_blank');
        }

        // 删除备份文件
        async function deleteBackup(filename) {
            if (!confirm(`确定要删除备份文件 ${filename} 吗？`)) return;
            
            try {
                const response = await fetch(`/admin/api/backup/delete/${filename}`, {
                    method: 'DELETE'
                });
                
                const result = await response.json();
                if (result.success) {
                    loadBackupHistory();
                    document.getElementById('operationLog').innerHTML += 
                        `<div>[<span class="text-success">SUCCESS</span>] 删除备份文件: ${filename}</div>`;
                }
            } catch (error) {
                console.error('删除备份文件失败:', error);
            }
        }

        // 页面加载时初始化
        document.addEventListener('DOMContentLoaded', function() {
            loadBackupHistory();
            checkSystemHealth();
            
            // 每30秒更新一次系统状态
            setInterval(checkSystemHealth, 30000);
        });
    </script>
</body>
</html>